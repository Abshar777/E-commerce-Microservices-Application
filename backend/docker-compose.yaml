services:

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - Ecommerce_network


  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
    depends_on:
      - zookeeper
    networks:
      - Ecommerce_network

  userService:
    build: ./user-service
    container_name: Ecommerce-user-service_c
    image: abshar777/ecommerce-user-service
    restart: unless-stopped
    env_file:
      - ./user-service/.env
    depends_on:
      - kafka
    ports:
      - 3000:3000
    networks: 
      - Ecommerce_network
    develop:
      watch:
        - action: sync
          path: ./user-service
          target: /app/
          ignore:
            - node_modules/
        - action: rebuild
          path: ./user-service/package.json

  productService:
    build: ./product-service
    container_name: Ecommerce-product-service_c
    image: abshar777/ecommerce-product-service
    restart: unless-stopped
    env_file:
      - ./product-service/.env
    depends_on:
      - kafka
    ports:
      - 3001:3001
    networks: 
      - Ecommerce_network
    develop:
      watch:
        - action: sync
          path: ./product-service
          target: /app/
          ignore:
            - node_modules/
        - action: rebuild
          path: ./product-service/package.json

  cartService:
    build: ./cart-service
    container_name: Ecommerce-cart-service_c
    image: abshar777/ecommerce-cart-service
    restart: unless-stopped
    env_file:
      - ./cart-service/.env
    depends_on:
      - kafka
    ports:
      - 3002:3002
    networks: 
      - Ecommerce_network
    develop:
      watch:
        - action: sync
          path: ./cart-service
          target: /app/
          ignore:
            - node_modules/
        - action: rebuild
          path: ./cart-service/package.json


  orderService:
    build: ./order-service
    container_name: Ecommerce-order-service_c
    image: abshar777/ecommerce-order-service
    restart: unless-stopped
    env_file:
      - ./order-service/.env
    depends_on:
      - kafka
    ports:
      - 3003:3003
    networks: 
      - Ecommerce_network
    develop:
      watch:
        - action: sync
          path: ./order-service
          target: /app/
          ignore:
            - node_modules/
        - action: rebuild
          path: ./order-service/package.json

  nginx:
    build: ./gateway
    container_name: Ecommerce-nginx-gateway
    image: abshar777/ecommerce-nginx-gateway
    ports:
      - 8000:80
    networks:
      - Ecommerce_network
    depends_on:
      - userService
      - productService
      - cartService
      - orderService



networks:
  Ecommerce_network:
    driver: bridge


